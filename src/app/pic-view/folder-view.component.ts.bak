import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';
import { Subscription } from 'rxjs';
import { take } from 'rxjs/operators';

import { TagService, PictureInfoService } from 'api';

import { ShowPictureService } from '../show-picture.service';

@Component({
  selector: 'folder-view',
  templateUrl: './folder-view.component.html',
  styleUrls: ['./folder-view.component.css']
})
export class FolderViewComponent implements OnInit {

    selected: string;
    tags: string[];

    @ViewChild('controller', { read: ElementRef }) controller: ElementRef;

    pictures: { thumbnailUrl: string, imageUrl: string }[] = [];

    position: number = 0;

    iconViewHeight: number;

    constructor(
        tagService: TagService, 
        private picInfoService: PictureInfoService,
        private showPictureService: ShowPictureService
    ) {
        tagService.getTagList(false).pipe(
            take(1)
        ).subscribe(tagList => {
            this.tags = tagList;
        });
    }

    ngOnInit() {
        this.fitIconView();
        window.addEventListener('resize', () => {
            this.fitIconView();
        });
    }

    fitIconView() {
        this.iconViewHeight = window.innerHeight - this.controller.nativeElement.getBoundingClientRect().bottom;
    }

    tagSelected(tag: string) {
        this.selected = tag;
        this.picInfoService.getPictureInfoList(tag, false).pipe(
            take(1)
        ).subscribe(result => {
            this.pictures = result.sort((a: any, b: any) => {
                return b.downloaded - a.downloaded;
            }).map(info => {
                return { thumbnailUrl: "picture/resources/thumbnail/" + info.id, imageUrl: "picture/resources/picture/" + info.id};
            });
        });
    }

    showPic(pos: number) {
        this.position = pos;
        this.showPictureService.showPicture(this.pictures[pos].imageUrl);
    }
}
